/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_TEST_KV_DB_PB_H_INCLUDED
#define PB_TEST_KV_DB_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SimplePODData {
    uint8_t value;
} SimplePODData;

typedef struct _KindaComplexPODData {
    uint8_t value;
    uint16_t value2;
    uint32_t value3;
    uint64_t value4;
} KindaComplexPODData;

typedef struct _StringData {
    char value[32];
} StringData;

typedef struct _GyroSensorData {
    float x;
    float y;
    float z;
} GyroSensorData;

typedef PB_BYTES_ARRAY_T(32) VariableSizedPODData_data_t;
typedef struct _VariableSizedPODData {
    uint8_t value;
    VariableSizedPODData_data_t data;
} VariableSizedPODData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SimplePODData_init_default               {0}
#define KindaComplexPODData_init_default         {0, 0, 0, 0}
#define StringData_init_default                  {""}
#define GyroSensorData_init_default              {0, 0, 0}
#define VariableSizedPODData_init_default        {0, {0, {0}}}
#define SimplePODData_init_zero                  {0}
#define KindaComplexPODData_init_zero            {0, 0, 0, 0}
#define StringData_init_zero                     {""}
#define GyroSensorData_init_zero                 {0, 0, 0}
#define VariableSizedPODData_init_zero           {0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define SimplePODData_value_tag                  1
#define KindaComplexPODData_value_tag            1
#define KindaComplexPODData_value2_tag           2
#define KindaComplexPODData_value3_tag           3
#define KindaComplexPODData_value4_tag           4
#define StringData_value_tag                     1
#define GyroSensorData_x_tag                     1
#define GyroSensorData_y_tag                     2
#define GyroSensorData_z_tag                     3
#define VariableSizedPODData_value_tag           1
#define VariableSizedPODData_data_tag            2

/* Struct field encoding specification for nanopb */
#define SimplePODData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   value,             1)
#define SimplePODData_CALLBACK NULL
#define SimplePODData_DEFAULT NULL

#define KindaComplexPODData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   value,             1) \
X(a, STATIC,   REQUIRED, UINT32,   value2,            2) \
X(a, STATIC,   REQUIRED, UINT32,   value3,            3) \
X(a, STATIC,   REQUIRED, UINT64,   value4,            4)
#define KindaComplexPODData_CALLBACK NULL
#define KindaComplexPODData_DEFAULT NULL

#define StringData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   value,             1)
#define StringData_CALLBACK NULL
#define StringData_DEFAULT NULL

#define GyroSensorData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    x,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    y,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    z,                 3)
#define GyroSensorData_CALLBACK NULL
#define GyroSensorData_DEFAULT NULL

#define VariableSizedPODData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   value,             1) \
X(a, STATIC,   REQUIRED, BYTES,    data,              2)
#define VariableSizedPODData_CALLBACK NULL
#define VariableSizedPODData_DEFAULT NULL

extern const pb_msgdesc_t SimplePODData_msg;
extern const pb_msgdesc_t KindaComplexPODData_msg;
extern const pb_msgdesc_t StringData_msg;
extern const pb_msgdesc_t GyroSensorData_msg;
extern const pb_msgdesc_t VariableSizedPODData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SimplePODData_fields &SimplePODData_msg
#define KindaComplexPODData_fields &KindaComplexPODData_msg
#define StringData_fields &StringData_msg
#define GyroSensorData_fields &GyroSensorData_msg
#define VariableSizedPODData_fields &VariableSizedPODData_msg

/* Maximum encoded size of messages (where known) */
#define GyroSensorData_size                      15
#define KindaComplexPODData_size                 24
#define SimplePODData_size                       3
#define StringData_size                          33
#define TEST_KV_DB_PB_H_MAX_SIZE                 VariableSizedPODData_size
#define VariableSizedPODData_size                37

#ifdef __cplusplus
} /* extern "C" */
#endif

#ifdef __cplusplus
/* Message descriptors for nanopb */
namespace nanopb {
template <>
struct MessageDescriptor<SimplePODData> {
    static PB_INLINE_CONSTEXPR const pb_size_t fields_array_length = 1;
    static PB_INLINE_CONSTEXPR const pb_size_t size = SimplePODData_size;
    static inline const pb_msgdesc_t* fields() {
        return &SimplePODData_msg;
    }
    static inline bool has_msgid() {
        return false;
    }
    static inline uint32_t msgid() {
        return 0;
    }
};
template <>
struct MessageDescriptor<KindaComplexPODData> {
    static PB_INLINE_CONSTEXPR const pb_size_t fields_array_length = 4;
    static PB_INLINE_CONSTEXPR const pb_size_t size = KindaComplexPODData_size;
    static inline const pb_msgdesc_t* fields() {
        return &KindaComplexPODData_msg;
    }
    static inline bool has_msgid() {
        return false;
    }
    static inline uint32_t msgid() {
        return 0;
    }
};
template <>
struct MessageDescriptor<StringData> {
    static PB_INLINE_CONSTEXPR const pb_size_t fields_array_length = 1;
    static PB_INLINE_CONSTEXPR const pb_size_t size = StringData_size;
    static inline const pb_msgdesc_t* fields() {
        return &StringData_msg;
    }
    static inline bool has_msgid() {
        return false;
    }
    static inline uint32_t msgid() {
        return 0;
    }
};
template <>
struct MessageDescriptor<GyroSensorData> {
    static PB_INLINE_CONSTEXPR const pb_size_t fields_array_length = 3;
    static PB_INLINE_CONSTEXPR const pb_size_t size = GyroSensorData_size;
    static inline const pb_msgdesc_t* fields() {
        return &GyroSensorData_msg;
    }
    static inline bool has_msgid() {
        return false;
    }
    static inline uint32_t msgid() {
        return 0;
    }
};
template <>
struct MessageDescriptor<VariableSizedPODData> {
    static PB_INLINE_CONSTEXPR const pb_size_t fields_array_length = 2;
    static PB_INLINE_CONSTEXPR const pb_size_t size = VariableSizedPODData_size;
    static inline const pb_msgdesc_t* fields() {
        return &VariableSizedPODData_msg;
    }
    static inline bool has_msgid() {
        return false;
    }
    static inline uint32_t msgid() {
        return 0;
    }
};
}  // namespace nanopb

#endif  /* __cplusplus */


#endif
